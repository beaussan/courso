version: 2.1
commands:
  setup_deps:
    description: 'Setup cache and do a yarn install'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}-{{checksum "functions/yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Install dependencies
          command: yarn --cwd functions install
jobs:
  cache: &shared-config
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}-{{checksum "functions/yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Install functions dependencies
          command: yarn --cwd functions install
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}-{{checksum "functions/yarn.lock"}}
          paths:
            - ./node_modules
            - ./functions/node_modules
  check-format:
    <<: *shared-config
    steps:
      - setup_deps
      - run: yarn format:check

  build-frontend:
    <<: *shared-config
    parameters:
      hasura-endpoint:
        type: env_var_name
      firebase-config:
        type: env_var_name
      sentry-key:
        type: env_var_name
      bulild-dest:
        type: string
    steps:
      - setup_deps
      - run:
          name: Build front end
          command: VITE_SENTRY_KEY=${<< parameters.sentry-key >>} VITE_FIREBASE_CONFIG=${<< parameters.firebase-config >>} VITE_HASURA_ENDPOINT=${<< parameters.hasura-endpoint >>} yarn build
      - run:
          name: Copy deployment artifacts to workspace
          command: cp dist/ /tmp/<< parameters.bulild-dest >> -r
      - store_artifacts:
          path: /tmp/<< parameters.bulild-dest >>
      - persist_to_workspace:
          root: /tmp
          paths:
            - << parameters.bulild-dest >>

  front-deploy:
    <<: *shared-config
    parameters:
      site-id:
        type: string
      deploy-folder:
        type: string
    working_directory: ~/deploy
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: List in deploy dir
          command: ls -tRFh /tmp/<< parameters.deploy-folder >>
      - run:
          name: List in tmp dir
          command: ls -tRFh /tmp
      - run:
          name: Deploy app
          command: yarn add netlify-cli && yarn netlify deploy -d /tmp/<< parameters.deploy-folder >> -a $NETLIFY_TOKEN -s << parameters.site-id >> -p

  apply-hasura-migrations-and-metadata:
    <<: *shared-config
    parameters:
      hasura-endpoint:
        type: env_var_name
      hasura-admin-secret:
        type: env_var_name
    steps:
      - setup_deps
      - run:
          name: Apply Hasura migrations and metadata
          working_directory: hasura
          command: |
            yarn hasura migrate apply --skip-update-check --admin-secret ${<< parameters.hasura-admin-secret >>} --endpoint https://${<< parameters.hasura-endpoint >>} --project hasura
            yarn hasura metadata apply --skip-update-check --admin-secret ${<< parameters.hasura-admin-secret >>} --endpoint https://${<< parameters.hasura-endpoint >>} --project hasura

workflows:
  version: 2
  build-and-deploy-full:
    jobs:
      - cache
      - check-format
      - build-frontend:
          name: build-frontend-dev
          hasura-endpoint: HASURA_URL_DEV
          firebase-config: FIREBASE_APP_CONFIG_DEV
          sentry-key: SENTRY_DEV_KEY
          bulild-dest: dev
          requires:
            - check-format

      - apply-hasura-migrations-and-metadata:
          name: apply-hasura-migrations-and-metadata-dev
          hasura-endpoint: HASURA_URL_DEV
          hasura-admin-secret: HASURA_ADMIN_SECRET_DEV
          requires:
            - check-format
          filters: &deploy-staging-filters
            branches:
              only: main
      - front-deploy:
          name: front-deploy-dev
          site-id: 58b0fd46-fb1a-406a-af12-1c45c6ffa66f
          deploy-folder: dev
          filters: *deploy-staging-filters
          requires:
            - deploy-firebase-dev
            - build-frontend-dev

      - deploy-firebase:
          name: deploy-firebase-dev
          firebase-project: dev
          filters: *deploy-staging-filters
          requires:
            - apply-hasura-migrations-and-metadata-dev

      - request_deploy_prod:
          type: approval
          filters: *deploy-staging-filters
          requires:
            - deploy-firebase-dev
            - front-deploy-dev
            - apply-hasura-migrations-and-metadata-dev

      - build-frontend:
          name: build-frontend-prod
          hasura-endpoint: HASURA_URL_PROD
          firebase-config: FIREBASE_APP_CONFIG_PROD
          sentry-key: SENTRY_PROD_KEY
          filters: *deploy-staging-filters
          bulild-dest: prod
          requires:
            - request_deploy_prod

      - apply-hasura-migrations-and-metadata:
          name: apply-hasura-migrations-and-metadata-prod
          hasura-endpoint: HASURA_URL_PROD
          hasura-admin-secret: HASURA_ADMIN_SECRET_PROD
          filters: *deploy-staging-filters
          requires:
            - request_deploy_prod
      - front-deploy:
          name: front-deploy-prod
          site-id: 658651dd-7b25-4288-820c-073e405fe6d6
          deploy-folder: prod
          filters: *deploy-staging-filters
          requires:
            - deploy-firebase-prod
            - build-frontend-prod

      - deploy-firebase:
          name: deploy-firebase-prod
          firebase-project: prod
          filters: *deploy-staging-filters
          requires:
            - apply-hasura-migrations-and-metadata-prod
            - request_deploy_prod
#  build-and-deploy-to-production:
#    jobs:
#    - server-build-prod:
#          filters: &deploy-production-filters
#            tags:
#              only: /^v.*/
#            branches:
#              ignore: /.*/
#      - check-format:
#          filters: *deploy-production-filters
#      - ui-build:
#          filters: *deploy-production-filters
#      - app-package-war:
#          requires:
#            - server-build-prod
#            - ui-build
#          filters: *deploy-production-filters
#      - deploy-hasura:
#          name: deploy-hasura-production
#          hasura-clever-app-id: app_fc7b0e28-2b2d-49b8-a848-a3f144c4dfa0
#          requires:
#            - app-package-war
#          filters: *deploy-production-filters
#      - apply-hasura-migrations-and-metadata:
#          name: apply-hasura-migrations-and-metadata-production
#          hasura-endpoint: https://hasura.platon.zenika.com
#          hasura-admin-secret: HASURA_ADMIN_SECRET_PRODUCTION
#          requires:
#            - deploy-hasura-production
#          filters: *deploy-production-filters
#      - deploy:
#          name: deploy-production
#          clever-app-id: app_8594657e-59eb-4b5d-8f5a-833fcb97a86d
#          requires:
#            - apply-hasura-migrations-and-metadata-production
#          filters: *deploy-production-filters
